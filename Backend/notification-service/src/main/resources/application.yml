server:
  port: ${SERVER_PORT}

spring:
  application:
    name: ${SPRING_APPLICATION_NAME}

  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

  rabbitmq:
    port: ${RABBITMQ_PORT}
    host: ${RABBITMQ_HOST}
    username: ${RABBITMQ_USERNAME}
    password: ${RABBITMQ_PASSWORD}
    listener:
      simple:
        default-requeue-rejected: false

management:
  endpoints:
    web:
      exposure:
        include: "health,info"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    shutdown:
      access: read_only
    health:
      probes:
        enabled: true
  info:
    env:
      enabled: true

eureka:
  instance:
    prefer-ip-address: true
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: ${EUREKA_DEFAULT_ZONE}

logging:
  level:
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

info:
  app:
    name: "Notification Service"
    description: "Notification Service API For Clinic Booking System"
    version: "1.0.0"
